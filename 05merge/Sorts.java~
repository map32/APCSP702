import java.util.ArrayList;

public class Sorts{

    private static ArrayList<Comparable> list;
    private static ArrayList<Comparable> list2;

    public static void mergesort(int[] intlist){
	list = new ArrayList<Comparable>();
	list2 = new ArrayList<Comparable>();
	for(int i=0;i<intlist.length;i++){
	    list.add(intlist[i]);
	}
	merge();
    }

    private static ArrayList<Comparable> merge(ArrayList<Comparable> a, ArrayList<Comparable> b){
	if(a.size==1){
	    return a;
	} else {
	    ArrayList<Comparable> x = merge(a.subList(0,a.size()/2));
	    ArrayList<Comparable> y = merge(a.subList(a.size()/2,a.size()));
	    do {
		if(x.get(0).compareTo(y.get(0))<=0){
		    list2.add(x.remove(0));
		} else {
		    list2.add(y.remove(0));
		}
	    } while (x.size()>0 && y.size()>0);
	    if(x.size()>0){
		list2.addAll(x);
	    } else if (y.size()>0){
		list2.addAll(y);
	    }
	    return list2;
	}
    }

    public static void main(String[]dd){
	int[] a = {3,6,2,7,5,1,4,9,8,0};
	System.out.println(mergesort(a));
    }
}
